const { Ds , Ques}=require("./schema");




const array=[ 
      { name: 'Write a Program to reverse the Linked List. (Both Iterative and recursive)',
    gfgURL: 'https://www.geeksforgeeks.org/reverse-a-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Reverse a Linked List in group of Given Size. [Very Imp]',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/reverse-a-linked-list-in-groups-of-given-size/1',
    isDone: false,
    isReview: false },
    { name: 'Write a program to Detect loop in a linked list.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/detect-loop-in-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Write a program to Delete loop in a linked list.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/remove-loop-in-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Find the starting point of the loop. ',
    gfgURL: 'https://www.geeksforgeeks.org/find-first-node-of-loop-in-a-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Remove Duplicates in a sorted Linked List.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/remove-duplicate-element-from-sorted-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Remove Duplicates in a Un-sorted Linked List.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Write a Program to Move the last element to Front in a Linked List.',
    gfgURL: 'https://www.geeksforgeeks.org/move-last-element-to-front-of-a-given-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Add “1” to a number represented as a Linked List.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/add-1-to-a-number-represented-as-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Add two numbers represented by linked lists.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/add-two-numbers-represented-by-linked-lists/1',
    isDone: false,
    isReview: false },
    { name: 'Intersection of two Sorted Linked List.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/intersection-of-two-sorted-linked-lists/1',
    isDone: false,
    isReview: false },
    { name: 'Intersection Point of two Linked Lists.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1',
    isDone: false,
    isReview: false },
    { name: 'Merge Sort For Linked lists.[Very Important]',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/sort-a-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Quicksort for Linked Lists.[Very Important]',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/quick-sort-on-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Find the middle Element of a linked list.',
    gfgURL: 'https://leetcode.com/problems/middle-of-the-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Check if a linked list is a circular linked list.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/circular-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Split a Circular linked list into two halves.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/split-a-circular-linked-list-into-two-halves/1',
    isDone: false,
    isReview: false },
    { name: 'Write a Program to check whether the Singly Linked list is a palindrome or not.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/check-if-linked-list-is-pallindrome/1',
    isDone: false,
    isReview: false },
    { name: 'Deletion from a Circular Linked List.',
    gfgURL: 'https://www.geeksforgeeks.org/deletion-circular-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Reverse a Doubly Linked list.',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/reverse-a-doubly-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Find pairs with a given sum in a DLL.',
    gfgURL: 'https://www.geeksforgeeks.org/find-pairs-given-sum-doubly-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Count triplets in a sorted DLL whose sum is equal to given value “X”.',
    gfgURL: 'https://www.geeksforgeeks.org/count-triplets-sorted-doubly-linked-list-whose-sum-equal-given-value-x/',
    isDone: false,
    isReview: false },
    { name: 'Sort a “k”sorted Doubly Linked list.[Very IMP]',
    gfgURL: 'https://www.geeksforgeeks.org/sort-k-sorted-doubly-linked-list/',
    isDone: false,
    isReview: false },
    { name: 'Rotate DoublyLinked list by N nodes.',
    gfgURL: 'https://www.geeksforgeeks.org/rotate-doubly-linked-list-n-nodes/',
    isDone: false,
    isReview: false },
    { name: 'Rotate a Doubly Linked list in group of Given Size.[Very IMP]',
    gfgURL: 'https://www.geeksforgeeks.org/reverse-doubly-linked-list-groups-given-size/',
    isDone: false,
    isReview: false },
    { name: 'Can we reverse a linked list in less than O(n) ?',
    gfgURL: null,
    isDone: false,
    isReview: false },
    { name: 'Why Quicksort is preferred for. Arrays and Merge Sort for LinkedLists ?',
    gfgURL: null,
    isDone: false,
    isReview: false },
    { name: 'Flatten a Linked List',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Sort a LL of 0\'s, 1\'s and 2\'s',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1',
    isDone: false,
    isReview: false },
    { name: 'Clone a linked list with next and random pointer',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/clone-a-linked-list-with-next-and-random-pointer/1',
    isDone: false,
    isReview: false },
    { name: 'Merge K sorted Linked list',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/merge-k-sorted-linked-lists/1',
    isDone: false,
    isReview: false },
    { name: 'Multiply 2 no. represented by LL',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/multiply-two-linked-lists/1',
    isDone: false,
    isReview: false },
    { name: 'Delete nodes which have a greater value on right side',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/delete-nodes-having-greater-value-on-right/1',
    isDone: false,
    isReview: false },
    { name: 'Segregate even and odd nodes in a Linked List',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/segregate-even-and-odd-nodes-in-a-linked-list/0',
    isDone: false,
    isReview: false },
    { name: 'Program for nth node from the end of a Linked List',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1',
    isDone: false,
    isReview: false },
    { name: 'Find the first non-repeating character from a stream of characters',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/first-non-repeating-character-in-a-stream/0',
    isDone: false,
    isReview: false } 
  ];











 const LinkedList = new Ds(
  {
      name:"LinkedList",
      items:array
  }   
);

module.exports={LinkedList};