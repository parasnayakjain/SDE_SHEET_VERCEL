const { Ds , Ques}=require("./schema");


const array=[ { name: 'Find first and last positions of an element in a sorted array',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/first-and-last-occurrences-of-x/0',
    isDone: false,
    isReview: false },
  { name: 'Find a Fixed Point (Value equal to index) in a given array',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/value-equal-to-index-value1330/1',
    isDone: false,
    isReview: false },
  { name: 'Search in a rotated sorted array',
    gfgURL: 'https://leetcode.com/problems/search-in-rotated-sorted-array/',
    isDone: false,
    isReview: false },
  { name: 'square root of an integer',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/count-squares3649/1',
    isDone: false,
    isReview: false },
  { name: 'Maximum and minimum of an array using minimum number of comparisons',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/middle-of-three2926/1',
    isDone: false,
    isReview: false },
  { name: 'Optimum location of point to minimize total distance',
    gfgURL: 'https://www.geeksforgeeks.org/optimum-location-point-minimize-total-distance/#:~:text=We%20need%20to%20find%20a,set%20of%20points%20is%20minimum.&text=In%20above%20figure%20optimum%20location,is%20minimum%20obtainable%20total%20distance.',
    isDone: false,
    isReview: false },
  { name: 'Find the repeating and the missing',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/find-missing-and-repeating2512/1',
    isDone: false,
    isReview: false },
  { name: 'find majority element',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/majority-element/0',
    isDone: false,
    isReview: false },
  { name: 'Searching in an array where adjacent differ by at most k',
    gfgURL: 'https://www.geeksforgeeks.org/searching-array-adjacent-differ-k/',
    isDone: false,
    isReview: false },
  { name: 'find a pair with a given difference',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/find-pair-given-difference/0',
    isDone: false,
    isReview: false },
  { name: 'find four elements that sum to a given value',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/find-all-four-sum-numbers/0',
    isDone: false,
    isReview: false },
  { name: 'maximum sum such that no 2 elements are adjacent',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/stickler-theif/0',
    isDone: false,
    isReview: false },
  { name: 'Count triplet with sum smaller than a given value',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/count-triplets-with-sum-smaller-than-x5549/1',
    isDone: false,
    isReview: false },
  { name: 'merge 2 sorted arrays',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays5135/1',
    isDone: false,
    isReview: false },
  { name: 'print all subarrays with 0 sum',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/zero-sum-subarrays/0',
    isDone: false,
    isReview: false },
  { name: 'Product array Puzzle',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/product-array-puzzle/0',
    isDone: false,
    isReview: false },
  { name: 'Sort array according to count of set bits',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/sort-by-set-bit-count/0',
    isDone: false,
    isReview: false },
  { name: 'minimum no. of swaps required to sort the array',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/minimum-swaps/1',
    isDone: false,
    isReview: false },
  { name: 'Bishu and Soldiers',
    gfgURL: 'https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/bishu-and-soldiers/',
    isDone: false,
    isReview: false },
  { name: 'Rasta and Kheshtak',
    gfgURL: 'https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/rasta-and-kheshtak/',
    isDone: false,
    isReview: false },
  { name: 'Kth smallest number again',
    gfgURL: 'https://www.hackerearth.com/practice/algorithms/searching/binary-search/practice-problems/algorithm/kth-smallest-number-again-2/',
    isDone: false,
    isReview: false },
  { name: 'Find pivot element in a sorted array',
    gfgURL: 'http://theoryofprogramming.com/2017/12/16/find-pivot-element-sorted-rotated-array/',
    isDone: false,
    isReview: false },
  { name: 'K-th Element of Two Sorted Arrays',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array/0',
    isDone: false,
    isReview: false },
  { name: 'Aggressive cows',
    gfgURL: 'https://www.spoj.com/problems/AGGRCOW/',
    isDone: false,
    isReview: false },
  { name: 'Book Allocation Problem',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages/0',
    isDone: false,
    isReview: false },
  { name: 'EKOSPOJ:',
    gfgURL: 'https://www.spoj.com/problems/EKO/',
    isDone: false,
    isReview: false },
  { name: 'Job Scheduling Algo',
    gfgURL: 'https://www.geeksforgeeks.org/weighted-job-scheduling-log-n-time/',
    isDone: false,
    isReview: false },
  { name: 'Missing Number in AP',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/arithmetic-number/0',
    isDone: false,
    isReview: false },
  { name: 'Smallest number with atleastn trailing zeroes infactorial',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/smallest-factorial-number5929/1',
    isDone: false,
    isReview: false },
  { name: 'Painters Partition Problem:',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/allocate-minimum-number-of-pages/0',
    isDone: false,
    isReview: false },
  { name: 'ROTI-Prata SPOJ',
    gfgURL: 'https://www.spoj.com/problems/PRATA/',
    isDone: false,
    isReview: false },
  { name: 'DoubleHelix SPOJ',
    gfgURL: 'https://www.spoj.com/problems/ANARC05B/',
    isDone: false,
    isReview: false },
  { name: 'Subset Sums',
    gfgURL: 'https://www.spoj.com/problems/SUBSUMS/',
    isDone: false,
    isReview: false },
  { name: 'Findthe inversion count',
    gfgURL: 'https://practice.geeksforgeeks.org/problems/inversion-of-array/0',
    isDone: false,
    isReview: false },
  { name: 'Implement Merge-sort in-place',
    gfgURL: 'https://www.geeksforgeeks.org/in-place-merge-sort/',
    isDone: false,
    isReview: false },
  { name: 'Partitioning and Sorting Arrays with Many Repeated Entries(DNF LOGIC)',
    gfgURL: 'https://www.baeldung.com/java-sorting-arrays-with-repeated-entries',
    isDone: false,
    isReview: false } ];


   
 const SearchAndSort = new Ds(
  {
      name:"SearchAndSort",
      items:array
  }   
);

module.exports={SearchAndSort};