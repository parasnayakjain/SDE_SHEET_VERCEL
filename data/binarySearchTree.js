const { Ds , Ques}=require("./schema");


const array=[ { name: 'Fina a value in a BST',
gfgURL: 'https://www.geeksforgeeks.org/binary-search-tree-set-1-search-and-insertion/',
isDone: false,
isReview: false },
{ name: 'Deletion of a node in a BST',
gfgURL: 'https://leetcode.com/problems/delete-node-in-a-bst/',
isDone: false,
isReview: false },
{ name: 'Find min and max value in a BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/minimum-element-in-bst/1',
isDone: false,
isReview: false },
{ name: 'Find inorder successor and inorder predecessor in a BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/predecessor-and-successor/1',
isDone: false,
isReview: false },
{ name: 'Check if a tree is a BST or not (did with inorder approach)',
gfgURL: 'https://practice.geeksforgeeks.org/problems/check-for-bst/1',
isDone: false,
isReview: false },
{ name: 'Populate Inorder successor of all nodes',
gfgURL: 'https://practice.geeksforgeeks.org/problems/populate-inorder-successor-for-all-nodes/1',
isDone: false,
isReview: false },
{ name: 'Find LCA  of 2 nodes in a BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-bst/1',
isDone: false,
isReview: false },
{ name: 'Construct BST from preorder traversal',
gfgURL: 'https://www.geeksforgeeks.org/construct-bst-from-given-preorder-traversa/',
isDone: false,
isReview: false },
{ name: 'Convert Binary tree into BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/binary-tree-to-bst/1',
isDone: false,
isReview: false },
{ name: 'Convert a normal BST into a Balanced BST',
gfgURL: 'https://www.geeksforgeeks.org/convert-normal-bst-balanced-bst/',
isDone: false,
isReview: false },
{ name: 'Merge two BST [ V.V.V>IMP ]',
gfgURL: 'https://www.geeksforgeeks.org/merge-two-balanced-binary-search-trees/',
isDone: false,
isReview: false },
{ name: 'Find Kth largest element in a BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/kth-largest-element-in-bst/1',
isDone: false,
isReview: false },
{ name: 'Find Kth smallest element in a BST',
gfgURL: 'https://practice.geeksforgeeks.org/problems/find-k-th-smallest-element-in-bst/1',
isDone: false,
isReview: false },
{ name: 'Count pairs from 2 BST whose sum is equal to given value "X"',
gfgURL: 'https://practice.geeksforgeeks.org/problems/brothers-from-different-root/1',
isDone: false,
isReview: false },
{ name: 'Find the median of BST in O(n) time and O(1) space',
gfgURL: 'https://www.geeksforgeeks.org/find-median-bst-time-o1-space/',
isDone: false,
isReview: false },
{ name: 'Count BST ndoes that lie in a given range',
gfgURL: 'https://practice.geeksforgeeks.org/problems/count-bst-nodes-that-lie-in-a-given-range/1',
isDone: false,
isReview: false },
{ name: 'Replace every element with the least greater element on its right',
gfgURL: 'https://www.geeksforgeeks.org/replace-every-element-with-the-least-greater-element-on-its-right/',
isDone: false,
isReview: false },
{ name: 'Given "n" appointments, find the conflicting appointments',
gfgURL: 'https://www.geeksforgeeks.org/given-n-appointments-find-conflicting-appointments/',
isDone: false,
isReview: false },
{ name: 'Check preorder is valid or not',
gfgURL: 'https://practice.geeksforgeeks.org/problems/preorder-to-postorder/0',
isDone: false,
isReview: false },
{ name: 'Check whether BST contains Dead end',
gfgURL: 'https://practice.geeksforgeeks.org/problems/check-whether-bst-contains-dead-end/1',
isDone: false,
isReview: false },
{ name: 'Largest BST in a Binary Tree [ V.V.V.V.V IMP ]',
gfgURL: 'https://practice.geeksforgeeks.org/problems/largest-bst/1',
isDone: false,
isReview: false },
{ name: 'Flatten BST to sorted list',
gfgURL: 'https://www.geeksforgeeks.org/flatten-bst-to-sorted-list-increasing-order/',
isDone: false,
isReview: false } ];



const BST = new Ds(
    {
        name:"BST",
        items:array
    }   
);

 module.exports={BST};