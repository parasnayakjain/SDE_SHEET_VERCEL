const { Ds , Ques}=require("./schema");

const array=	[ { name: 'level order traversal',
gfgURL: 'https://practice.geeksforgeeks.org/problems/level-order-traversal/1',
isDone: false,
isReview: false },
{ name: 'Reverse Level Order traversal',
gfgURL: 'https://practice.geeksforgeeks.org/problems/reverse-level-order-traversal/1',
isDone: false,
isReview: false },
{ name: 'Height of a tree (using recursion we can split question)',
gfgURL: 'https://practice.geeksforgeeks.org/problems/height-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Diameter of a tree(imp)',
gfgURL: 'https://practice.geeksforgeeks.org/problems/diameter-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Mirror of a tree(ans is in level order traversal)',
gfgURL: 'https://www.geeksforgeeks.org/create-a-mirror-tree-from-the-given-binary-tree/',
isDone: false,
isReview: false },
{ name: 'Inorder Traversal of a tree both using recursion and Iteration',
gfgURL: 'https://www.techiedelight.com/inorder-tree-traversal-iterative-recursive/',
isDone: false,
isReview: false },
{ name: 'Preorder Traversal of a tree both using recursion and Iteration',
gfgURL: 'https://www.techiedelight.com/preorder-tree-traversal-iterative-recursive/',
isDone: false,
isReview: false },
{ name: 'Postorder Traversal of a tree both using recursion and Iteration',
gfgURL: 'https://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/',
isDone: false,
isReview: false },
{ name: 'Left View of a tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Right View of Tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/right-view-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Top View of a tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Bottom View of a tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Zig-Zag traversal of a binary tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/zigzag-tree-traversal/1',
isDone: false,
isReview: false },
{ name: 'Check if a tree is balanced or not',
gfgURL: 'https://practice.geeksforgeeks.org/problems/check-for-balanced-tree/1',
isDone: false,
isReview: false },
{ name: 'Diagnol Traversal of a Binary tree',
gfgURL: 'https://www.geeksforgeeks.org/diagonal-traversal-of-binary-tree/',
isDone: false,
isReview: false },
{ name: 'Boundary traversal of a Binary tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Construct Binary Tree from String with Bracket Representation',
gfgURL: 'https://www.geeksforgeeks.org/construct-binary-tree-string-bracket-representation/',
isDone: false,
isReview: false },
{ name: 'Convert Binary tree into Doubly Linked List',
gfgURL: 'https://practice.geeksforgeeks.org/problems/binary-tree-to-dll/1',
isDone: false,
isReview: false },
{ name: 'Convert Binary tree into Sum tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/transform-to-sum-tree/1',
isDone: false,
isReview: false },
{ name: 'Construct Binary tree from Inorder and preorder traversal',
gfgURL: 'https://practice.geeksforgeeks.org/problems/construct-tree-1/1',
isDone: false,
isReview: false },
{ name: 'Find minimum swaps required to convert a Binary tree into BST',
gfgURL: 'https://www.geeksforgeeks.org/minimum-swap-required-convert-binary-tree-binary-search-tree/#:~:text=Given%20the%20array%20representation%20of,it%20into%20Binary%20Search%20Tree.&text=Swap%201%3A%20Swap%20node%208,node%209%20with%20node%2010.',
isDone: false,
isReview: false },
{ name: 'Check if Binary tree is Sum tree or not',
gfgURL: 'https://practice.geeksforgeeks.org/problems/sum-tree/1',
isDone: false,
isReview: false },
{ name: 'Check if all leaf nodes are at same level or not',
gfgURL: 'https://practice.geeksforgeeks.org/problems/leaf-at-same-level/1',
isDone: false,
isReview: false },
{ name: 'Check if a Binary Tree contains duplicate subtrees of size 2 or more [ IMP ]',
gfgURL: 'https://practice.geeksforgeeks.org/problems/duplicate-subtree-in-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Check if 2 trees are mirror or not',
gfgURL: 'https://practice.geeksforgeeks.org/problems/check-mirror-in-n-ary-tree/0',
isDone: false,
isReview: false },
{ name: 'Sum of Nodes on the Longest path from root to leaf node ',
gfgURL: 'https://practice.geeksforgeeks.org/problems/sum-of-the-longest-bloodline-of-a-tree/1',
isDone: false,
isReview: false },
{ name: 'Check if given graph is tree or not.  [ IMP ]',
gfgURL: 'https://www.geeksforgeeks.org/check-given-graph-tree/#:~:text=Since%20the%20graph%20is%20undirected,graph%20is%20connected%2C%20otherwise%20not.',
isDone: false,
isReview: false },
{ name: 'Find Largest subtree sum in a tree',
gfgURL: 'https://www.geeksforgeeks.org/find-largest-subtree-sum-tree/',
isDone: false,
isReview: false },
{ name: 'Maximum Sum of nodes in Binary tree such that no two are adjacent ',
gfgURL: 'https://www.geeksforgeeks.org/maximum-sum-nodes-binary-tree-no-two-adjacent/',
isDone: false,
isReview: false },
{ name: 'Print all "K" Sum paths in a Binary tree',
gfgURL: 'https://www.geeksforgeeks.org/print-k-sum-paths-binary-tree/',
isDone: false,
isReview: false },
{ name: 'Find LCA in a Binary tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Find distance between 2 nodes in a Binary tree',
gfgURL: 'https://practice.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/1',
isDone: false,
isReview: false },
{ name: 'Kth Ancestor of node in a Binary tree',
gfgURL: 'https://www.geeksforgeeks.org/kth-ancestor-node-binary-tree-set-2/',
isDone: false,
isReview: false },
{ name: 'Find all Duplicate subtrees in a Binary tree [ IMP ]',
gfgURL: 'https://practice.geeksforgeeks.org/problems/duplicate-subtrees/1',
isDone: false,
isReview: false },
{ name: 'Tree Isomorphism Problem',
gfgURL: 'https://practice.geeksforgeeks.org/problems/check-if-tree-is-isomorphic/1',
isDone: false,
isReview: false },
{ name: '', gfgURL: null, isDone: false, isReview: false } ];




const BinaryTree = new Ds(
    {
        name:"BinaryTree",
        items:array
    }   
);

 module.exports={BinaryTree};